{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNy1a20k38CtbreZ2DNaDqk",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Jahnavi0-0/FMML-Projects-and-Labs/blob/main/Question%200-%20methods%20in%20data%20types\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GITDx0F3QBNY",
        "outputId": "1cdf4379-c562-4b83-d2fe-22307d749b6f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "False\n",
            "True\n",
            "True\n",
            "False\n",
            "True\n",
            "False\n",
            "4\n"
          ]
        }
      ],
      "source": [
        "#string methos\n",
        "name = \"janu\"\n",
        "print(name.startswith('a'))\n",
        "print(name.endswith('u'))\n",
        "print(name.isalpha())\n",
        "print(name.isdigit())\n",
        "print(name.isalnum())\n",
        "print(name.isdecimal())\n",
        "print(len(name))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# list methods\n",
        "fruits = ['apple','banana']\n",
        "new = ['cherry','strawberry']\n",
        "fruits.extend(new)\n",
        "print(fruits)\n",
        "\n",
        "fruits.append('orange')\n",
        "print(fruits)\n",
        "\n",
        "a = new.clear()\n",
        "print(new)\n",
        "\n",
        "new.insert(0,'guava')\n",
        "print(new)\n",
        "\n",
        "print(fruits[2])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bBe-N5nORhyq",
        "outputId": "9335029b-c14a-48e9-eb89-9402776a62ba"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['apple', 'banana', 'cherry', 'strawberry']\n",
            "['apple', 'banana', 'cherry', 'strawberry', 'orange']\n",
            "[]\n",
            "['guava']\n",
            "cherry\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#tuple methods\n",
        "letters = ('a','b','c')\n",
        "print(letters[0])\n",
        "\n",
        "print(letters[-1])\n",
        "\n",
        "print(letters.count('a'))\n",
        "print(letters.index('b'))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WGn34ZQGT-wJ",
        "outputId": "bb28e5ee-37e7-45bc-8fd5-9a862d9895d1"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "a\n",
            "c\n",
            "1\n",
            "1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#dictionary methods\n",
        "comb = {1:'hiii',2:'hello'}\n",
        "print(len(comb))\n",
        "\n",
        "comb[3] = 'byee'\n",
        "print(comb)\n",
        "\n",
        "del comb[2]\n",
        "print(comb)\n",
        "\n",
        "comb.clear()\n",
        "print(comb)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EHM9dJqEWMn3",
        "outputId": "02469943-f983-4ac0-bda7-4be0467ec698"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2\n",
            "{1: 'hiii', 2: 'hello', 3: 'byee'}\n",
            "{1: 'hiii', 3: 'byee'}\n",
            "{}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#set methods\n",
        "a = {1,2,3}\n",
        "b = {'a','b','c'}\n",
        "\n",
        "a.update(b)\n",
        "print(a)\n",
        "\n",
        "a.remove(2)\n",
        "print(a)\n",
        "\n",
        "b.add('d')\n",
        "print(b)\n",
        "\n",
        "b.discard('d')\n",
        "print(b)\n",
        "\n",
        "a.clear()\n",
        "print(a)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nQEQQ30UXbi2",
        "outputId": "530459d8-af2b-4921-fd9b-f306fd66cb91"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{1, 2, 3, 'c', 'b', 'a'}\n",
            "{1, 3, 'c', 'b', 'a'}\n",
            "{'d', 'a', 'c', 'b'}\n",
            "{'a', 'c', 'b'}\n",
            "set()\n"
          ]
        }
      ]
    }
  ]
}